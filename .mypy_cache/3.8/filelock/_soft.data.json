{".class": "MypyFile", "_fullname": "filelock._soft", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "BaseFileLock": {".class": "SymbolTableNode", "cross_ref": "filelock._api.BaseFileLock", "kind": "Gdef", "module_public": false}, "EACCES": {".class": "SymbolTableNode", "cross_ref": "errno.EACCES", "kind": "Gdef", "module_public": false}, "EEXIST": {".class": "SymbolTableNode", "cross_ref": "errno.EEXIST", "kind": "Gdef", "module_public": false}, "ENOENT": {".class": "SymbolTableNode", "cross_ref": "errno.ENOENT", "kind": "Gdef", "module_public": false}, "SoftFileLock": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["filelock._api.BaseFileLock"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "filelock._soft.SoftFileLock", "name": "SoftFileLock", "type_vars": []}, "flags": [], "fullname": "filelock._soft.SoftFileLock", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "filelock._soft", "mro": ["filelock._soft.SoftFileLock", "filelock._api.BaseFileLock", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "_acquire": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "filelock._soft.SoftFileLock._acquire", "name": "_acquire", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["filelock._soft.SoftFileLock"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_acquire of SoftFileLock", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_release": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "filelock._soft.SoftFileLock._release", "name": "_release", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["filelock._soft.SoftFileLock"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_release of SoftFileLock", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__all__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": [], "fullname": "filelock._soft.__all__", "name": "__all__", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.list"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "filelock._soft.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "filelock._soft.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "filelock._soft.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "module_public": false, "node": {".class": "Var", "flags": ["is_ready"], "fullname": "filelock._soft.__package__", "name": "__package__", "type": "builtins.str"}}, "annotations": {".class": "SymbolTableNode", "cross_ref": "__future__.annotations", "kind": "Gdef", "module_public": false}, "os": {".class": "SymbolTableNode", "cross_ref": "os", "kind": "Gdef", "module_public": false}, "raise_on_exist_ro_file": {".class": "SymbolTableNode", "cross_ref": "filelock._util.raise_on_exist_ro_file", "kind": "Gdef", "module_public": false}, "sys": {".class": "SymbolTableNode", "cross_ref": "sys", "kind": "Gdef", "module_public": false}}, "path": "/home/s/anaconda3/lib/python3.8/site-packages/filelock/_soft.py"}